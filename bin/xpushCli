#!/usr/bin/env node

var util      = require('util'),
    colors    = require('colors'),
    async     = require('async'),
    io        = require( '../node_modules/socket.io/node_modules/socket.io-client' );

var help = [
  "",
  "usage: xpushCli <command> [<args>]",
  "",
  "The most commonly used 'xpushCli' commands are:",
  "   set      reset global configurations on xpush servers",
  "   usage    show the status for the channel server",
  ""
].join('\n');

var command = ['set', 'usage'];

var args = process.argv.slice(2);

console.log(args.length);
// Validation on CLI arguments
if(args.length > 0){

  // set
  if(args[0] == command[0] && args.length != 3){

    return util.puts(
      "'set' arguments is not valid \n"+
      "   usage: xpushCli set <KEY> <VALUE> \n"+
      "      ex: [XPUSH_HOME]/bin/xpushCli set max-connection 120 \n");

  // usage
  }else if(args[0] == command[1] && args.length < 3){

    return util.puts(
      "'usgae' arguments is not valid \n"+
      "   usage: xpushCli set <HOST> <PORT> [interval(sec)]\n"+
      "      ex: [XPUSH_HOME]/bin/xpushCli usage 127.0.0.1 9001 \n");

  }else if(command.indexOf(args[0]) == -1) {
    return util.puts(help);
  }

}else{
  return util.puts(help);
}

var __set = function(_key, _value) {
  // TODO zookeeper 에 설정값 셋팅
  console.log('comming soon (server configuration)');
};

var __usage = function(_host, _port) {
  // TODO channel 서버의 admin namespace 에 접속해서 서버 모니터링 정보 보여주기.
  console.log('comming soon (server configuration)');
};


switch(args[0]) {
  case command[0] : // 'set':
    __set(args[1], args[2]); // key, value
    break;
  case command[1] : // 'usage':
    __usage(args[1], args[2]); // host, port
    break;
  default:
    console.log('Hi there~ :)');
}
